import cv2 as Cv2
import cv2.cv2 as cv
import numpy as np
cap = cv.VideoCapture(0)
data_path = "./face_data/"
face_cascade = cv.CascadeClassifier("haarcascade_frontalface_alt.xml")
# haarcascade classifier scans the entire face
# skip a variable to wait for 10 seconds
skip = 0

# create a list to store th images generated by opening the camera
face_data = []

file_name = input("Enter name of person whos face is scanned: ")
#file_name = "ameya"
while True:
    ret,frame = cap.read()
    if ret == False:
        continue
    # convert to grayscale images for easy handling of data
    gray_frame = cv.cvtColor(frame,cv.COLOR_BGR2GRAY)
    skip += 1
    faces = face_cascade.detectMultiScale(gray_frame,1.3,5)
    # 5 nearest neighbours
    # scales to 1.3(shrinkage)
    # returns the coordinates of the face as a list
    #  return x,y,w,h of the face which can be used to draw a box
    k = 1
    # faces[x,y,w,h] values
    faces = sorted(faces, key= lambda x: x[2]*x[3], reverse = True)
    # calculating the area and arranging in descending order reversed = true
    for face in faces[:1]:
        x,y,w,h = face
        # face a list containing x,y,w,h
        offset = 5
        # offset for padding
        # frame has the actual phot of the object
        face_offset =frame[y-offset:y+offset+h,x-offset:x+offset+w]
        face_selection = cv.resize(face_offset,(100,100))
        # selected face parts then resizing to standardizing data
        if skip % 10 == 0:
            face_data.append(face_selection)

        cv.imshow(str(k), face_selection)
        k+=1

        # drawing a rectangle around the face

        cv.rectangle(frame,(x,y),(x+w,y+h),(0,255,0))

    cv.imshow("faces",frame)
    key_pressed = cv.waitKey(1) & 0xFF
    if key_pressed == ord("q"):
        break
    # convert this list into a numpy array then resize it  and save the data in a folder

face_data = np.array(face_data)
face_data = face_data.reshape((face_data.shape[0],-1))

np.save(data_path+file_name,face_data)
print("Data set is :{}".format(data_path + file_name+".npy"))

cap.release()
cv.destroyAllWindows()
